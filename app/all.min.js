"use strict";angular.module("myApp",["ngRoute","myApp.components.factories","myApp.view1.controllers","myApp.view1.services","myApp.view1.factories","myApp.view2.controllers","myApp.view3.controllers","myApp.version","myApp.directive"]).config(["$locationProvider","$routeProvider",function(e,o){e.hashPrefix("!"),o.otherwise({redirectTo:"/view1"})}]);
!function(){"use strict";angular.module("myApp.components.factories",[])}();
!function(){"use strict";function n(n){function t(){if(!1==this instanceof t)throw new Error('Must be invoked with "new" operator');return this}angular.extend(t.prototype,{saveEvent:function(t){n.$broadcast(e,t)},onSaveEvent:function(n,t){var o=n.$on(e,function(n,e){t(n,e)});return o}});var e="event1.evt";return new t}angular.module("myApp.components.factories").factory("view1EventManager",["$rootScope",n])}();
"use strict";angular.module("myApp.version.interpolate-filter",[]).filter("interpolate",["version",function(e){return function(r){return String(r).replace(/\%VERSION\%/gm,e)}}]);
"use strict";angular.module("myApp.version.version-directive",[]).directive("appVersion",["version",function(e){return function(i,n,r){n.text(e)}}]);
"use strict";angular.module("myApp.version",["myApp.version.interpolate-filter","myApp.version.version-directive"]).value("version","0.1");
angular.module("myApp.directive",[]).directive("valueDisplay",function(){return{restrict:"EA",scope:{user:"="},templateUrl:"templates/name-template.html",link:function(e,t,l){console.log(e.user)}}});
!function(){"use strict";angular.module("myApp.view1.controllers",["myApp.view1.services","myApp.components.factories"]),angular.module("myApp.view1.services",[]),angular.module("myApp.view1.factories",[])}();
!function(){"use strict";function e(e,i,n,t){function o(){l(),e.parameterValueChanged=r}function l(){e.view1FieldGroup=i.getView1Fields(),e.view2FieldGroup=i.getView2Fields()}function r(e){}return o(),this}angular.module("myApp.view1.controllers").controller("fieldController",["$scope","fieldRepository","fieldDefinitionSet","view1EventManager",e])}();
!function(){"use strict";function n(n,e){function o(){function o(n){}e.onSaveEvent(n,function(n,e){o(e)})}return o(),this}angular.module("myApp.view1.controllers").controller("saveController",["$scope","view1EventManager",n])}();
"use strict";function View1Ctrl(e,r,t){function i(){t.saveEvent("save")}e.user=r.userInfo(),e.save=i}angular.module("myApp.view1.controllers").config(["$routeProvider",function(e){e.when("/view1",{templateUrl:"view1/view1.html",controller:"View1Ctrl"})}]).controller("View1Ctrl",["$scope","view1Service","view1EventManager",View1Ctrl]);
!function(){"use strict";function e(){this.userInfo=function(){var e={fname:"Julian",lname:"Heissl",username:"jheissl",email:"jheissl@cloud.com",address:"London"};return e}}angular.module("myApp.view1.services").service("view1Service",[e])}();
!function(){"use strict";function e(){var e={fname:new a({name:"fname",modelName:"fname",tag:"fname",isTextBox:!0,isColumn:!0,placeholder:"First name"}),lname:new a({name:"lname",modelName:"lname",tag:"lname",isTextBox:!0,isColumn:!0,placeholder:"Last name"}),username:new a({name:"username",modelName:"username",tag:"username",isTextBox:!0,isColumn:!0,placeholder:"Username"}),email:new a({name:"email",modelName:"email",tag:"email",isTextBox:!0,isColumn:!0,placeholder:"Email"}),address:new a({name:"address",modelName:"address",tag:"address",isTextBox:!0,isColumn:!0,placeholder:"Address"})};return e}function a(e){function n(e){this.name=e.name,this.modelName=e.modelName,this.tag=e.tag,this.isTextBox=e.isTextBox,this.isColumn=e.isColumn}if(!1==this instanceof a)throw new Error('Must be invoked with "new" operator');return this.name,this.modelName,this.tag,this.isTextBox,this.isColumn,n.call(this,e),this}angular.module("myApp.view1.factories").factory("fieldDefinitionSet",[e]),a.prototype.clone=function(){return new a(this)}}();
!function(){"use strict";function e(e){function n(){function i(){o=t(),s=r()}function t(){var n=[e.fname,e.lname,e.username,e.address,e.email];return n}function r(){var n=[{groupTitle:"Two columns of input fields",firstInspection:{leftSide:{paramDefs:[e.fname,e.lname]},rightSide:{paramDefs:[e.email,e.username,e.address]}}}];return n}if(!1==this instanceof n)throw new Error('Must be invoked with "new" operator');return this.getView1Fields=function(){return o},this.getView2Fields=function(){return s},i(),this;var o,s}return new n}angular.module("myApp.view1.factories").factory("fieldRepository",["fieldDefinitionSet",e])}();
!function(){"use strict";angular.module("myApp.view2.controllers",["ngRoute"])}();
"use strict";angular.module("myApp.view2.controllers").config(["$routeProvider",function(e){e.when("/view2",{templateUrl:"view2/view2.html",controller:"View2Ctrl"})}]).controller("View2Ctrl",function(e,r){e.user={fname:"faruk",lname:"pobric"}});
"use strict";angular.module("myApp.view3.controllers",["ngRoute"]).config(["$routeProvider",function(e){e.when("/view3",{templateUrl:"view3/view3.html",controller:"View3Ctrl"})}]).controller("View3Ctrl",function(e){e.user={fname:"kurko",lname:"nurko"}});